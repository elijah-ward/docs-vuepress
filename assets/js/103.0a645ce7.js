(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{435:function(e,t,a){"use strict";a.r(t);var r=a(0),n=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"storage-converter-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage-converter-plugin","aria-hidden":"true"}},[e._v("#")]),e._v(" Storage Converter Plugin")]),e._v(" "),a("p",[e._v("Updated March 29, 2014")]),e._v(" "),a("h2",{attrs:{id:"about"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about","aria-hidden":"true"}},[e._v("#")]),e._v(" About")]),e._v(" "),a("p",[e._v("Storage converters can modify file contents and metadata uploaded to the "),a("router-link",{attrs:{to:"/administration/security/key-storage.html"}},[e._v("Key Storage")]),e._v(" via the [Key Storage API](/api/rundeck-api.md#key-storage].")],1),e._v(" "),a("p",[e._v("When installed, Storage Converter plugins can be configured to apply to all storage requests for a certain Path, or matching a certain metadata selector. This lets you apply plugins to only a subset of storage requests.")]),e._v(" "),a("p",[e._v("A typical example is to apply some form of encryption to the "),a("router-link",{attrs:{to:"/administration/security/key-storage.html"}},[e._v("Key Storage")]),e._v(" stored under the "),a("code",[e._v("/keys")]),e._v(" path. In this case you can also have the plugin apply only to Private keys, by using the metadata selector.")],1),e._v(" "),a("h2",{attrs:{id:"configuring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuring","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuring")]),e._v(" "),a("p",[e._v("See: [Configuring the Storage Converter Plugin](/administration/security/key-storage.md#configuring-the-storage-converter-plugin].")]),e._v(" "),a("h2",{attrs:{id:"java-plugin-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-plugin-type","aria-hidden":"true"}},[e._v("#")]),e._v(" Java Plugin Type")]),e._v(" "),a("ul",[a("li",[a("em",[e._v("Note")]),e._v(": Refer to [Java Development](/developer/01-plugin-development.md#java-plugin-development] for information about developing a Java plugin for Rundeck.")])]),e._v(" "),a("p",[e._v("The plugin interface is "),a("router-link",{attrs:{to:"/developer/${javadocbase}/com/dtolabs/rundeck/plugins/storage/StorageConverterPlugin.html"}},[e._v("StorageConverterPlugin")]),e._v(".")],1),e._v(" "),a("p",[e._v("The service name is "),a("router-link",{attrs:{to:"/developer/${javadocbase}/com/dtolabs/rundeck/plugins/ServiceNameConstants.html#StorageConverter"}},[a("code",[e._v("StorageConverter")])]),e._v(".")],1),e._v(" "),a("p",[e._v("SEE ALSO: "),a("a",{attrs:{href:"$%7Bjavadocstoragetop%7D"}},[e._v("rundeck-storage-api")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-{.java} extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('import com.dtolabs.rundeck.core.plugins.Plugin;\nimport com.dtolabs.rundeck.core.storage.ResourceMetaBuilder;\nimport com.dtolabs.rundeck.plugins.ServiceNameConstants;\nimport com.dtolabs.rundeck.plugins.storage.StorageConverterPlugin;\nimport org.rundeck.storage.api.HasInputStream;\nimport org.rundeck.storage.api.Path;\n\n@Plugin(name="myprovider", service=ServiceNameConstants.StorageConverter)\npublic class MyProvider implements StorageConverterPlugin {\n    /** read the stored data, decrypt if necessary */\n    HasInputStream readResource(Path path, ResourceMetaBuilder\n      resourceMetaBuilder, HasInputStream hasInputStream){\n      return null;\n  }\n\n    /** encrypt data to be stored if necessary */\n    HasInputStream createResource(Path path, ResourceMetaBuilder\n      resourceMetaBuilder, HasInputStream hasInputStream){\n      return null;\n  }\n\n    /** encrypt data to be stored if necessary */\n    HasInputStream updateResource(Path path, ResourceMetaBuilder\n      resourceMetaBuilder, HasInputStream hasInputStream){\n      return null;\n  }\n}\n')])])]),a("p",[e._v("The three methods are called when a resource is read, created, or updated, respectively.")]),e._v(" "),a("p",[e._v("Your plugin can do any of the following:")]),e._v(" "),a("ol",[a("li",[e._v("Do nothing and return null, this will result that no changes to the stored data or metadata will be made.")]),e._v(" "),a("li",[e._v("Modify the content being written or read, by reading the incoming data via the "),a("code",[e._v("HasInputStream")]),e._v(" object, and returning a new "),a("code",[e._v("HasInputStream")]),e._v(" object which will provide the modified data.\n"),a("ul",[a("li",[e._v('If you are doing the typical "encrypt/decrypt", you will want to '),a("em",[e._v("encrypt")]),e._v(" during create, update, and "),a("em",[e._v("decrypt")]),e._v(" during the read operation")])])]),e._v(" "),a("li",[e._v("Modify the metadata being written or read, by calling methods on the "),a("code",[e._v("ResourceMetaBuilder")]),e._v(" object. This object will provide the metadata values that would be written/read. You can change the values by setting new values in the object.")])]),e._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("Example code under the "),a("code",[e._v("examples/")]),e._v(" directory:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("example-java-storage-converter-plugin")])])])])},[],!1,null,null,null);t.default=n.exports}}]);