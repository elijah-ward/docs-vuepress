(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{432:function(e,n,t){"use strict";t.r(n);var a=t(0),o=Object(a.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"option-values-plugins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#option-values-plugins","aria-hidden":"true"}},[e._v("#")]),e._v(" Option Values Plugins")]),e._v(" "),t("p",[e._v("Updated January 18, 2019")]),e._v(" "),t("h2",{attrs:{id:"about"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#about","aria-hidden":"true"}},[e._v("#")]),e._v(" About")]),e._v(" "),t("p",[e._v("Option values plugins allow you to provide custom values to your job options.\nInstead of creating a web service to provide the values, or supplying a static list\nof options, you can use an option values plugin to provide valid values for an option.\nIf you configure an option values plugin for your job, the plugin will run\nand provide the values to the UI when you are preparing the job for execution.")]),e._v(" "),t("p",[e._v("To enable this plugin type in your Rundeck installation add the following to your "),t("code",[e._v("rundeck-config.properties")]),e._v(":")]),e._v(" "),t("pre",[t("code",[e._v("rundeck.feature.option-values-plugin.enabled=true\n")])]),e._v(" "),t("h2",{attrs:{id:"use"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use","aria-hidden":"true"}},[e._v("#")]),e._v(" Use")]),e._v(" "),t("p",[e._v("Create an option values plugin and install it like other Rundeck plugins.\nWhen you are creating a job, create a new option with the option type: Text.\nScroll down to the "),t("strong",[e._v("Allowed Values")]),e._v(" section and you will see your option values plugin listed.")]),e._v(" "),t("p",[t("img",{attrs:{src:"/figures/option-values-create.png",alt:"Figure: Select Option Values Plugin"}})]),e._v(" "),t("p",[e._v("Select your option values plugin. Finish configuring your job.")]),e._v(" "),t("p",[e._v("When you go to execute your job you will see the values provided by your plugin as\nthe allowable values for your option.")]),e._v(" "),t("p",[t("img",{attrs:{src:"/figures/option-values-exec-values.png",alt:"Figure: Choose Value from Plugin Provided Values"}})]),e._v(" "),t("p",[e._v("Select the value then run your Job.")]),e._v(" "),t("h2",{attrs:{id:"configuring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuring")]),e._v(" "),t("p",[e._v("To configure your plugin you can add configuration values to either the framework or project scope.")]),e._v(" "),t("p",[t("em",[e._v("Framework scope property definition in "),t("code",[e._v("framework.properties")])])]),e._v(" "),t("pre",[t("code",[e._v("framework.plugin.OptionValues.[your_plugin_name].[property]=value\n")])]),e._v(" "),t("p",[t("em",[e._v("Project scope property definition in "),t("code",[e._v("project.properties")])])]),e._v(" "),t("pre",[t("code",[e._v("project.plugin.OptionValues.[your_plugin_name].[property]=value\n")])]),e._v(" "),t("h2",{attrs:{id:"java-plugin-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-plugin-type","aria-hidden":"true"}},[e._v("#")]),e._v(" Java Plugin Type")]),e._v(" "),t("div",{staticClass:"language-{.java} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('package com.plugin.optionvalue;\n\nimport com.dtolabs.rundeck.core.plugins.Plugin;\nimport com.dtolabs.rundeck.plugins.descriptions.PluginDescription;\nimport com.dtolabs.rundeck.plugins.option.OptionValue;\nimport com.dtolabs.rundeck.plugins.option.OptionValuesPlugin;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\n@Plugin(service="OptionValues", name="foo-option-values")\n@PluginDescription(title="Foo Option Values", description="Option values java plugin")\npublic class FooOptionValues implements OptionValuesPlugin {\n    @Override\n    public List<OptionValue> getOptionValues(final Map config) {\n        List<OptionValue> options = new ArrayList<>();\n        options.add(new StandardOptionValue("Alpha","alpha"));\n        options.add(new StandardOptionValue("Beta","beta"));\n        options.add(new StandardOptionValue("Gamma","gamma"));\n        return options;\n    }\n\n    class StandardOptionValue implements OptionValue {\n\n        private String name;\n        private String value;\n        StandardOptionValue(String name, String value) {\n            this.name = name;\n            this.value = value;\n        }\n        @Override\n        public String getName() {\n            return name;\n        }\n\n        @Override\n        public String getValue() {\n            return value;\n        }\n    }\n}\n')])])]),t("h2",{attrs:{id:"groovy-plugin-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#groovy-plugin-type","aria-hidden":"true"}},[e._v("#")]),e._v(" Groovy Plugin Type")]),e._v(" "),t("div",{staticClass:"language-{.groovy} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import com.dtolabs.rundeck.plugins.option.OptionValuesPlugin\n\nrundeckPlugin(OptionValuesPlugin) {\n    title="Foo Option Values Plugin"\n    description="Option Values Plugin"\n\n    configuration {\n        cfg1 title: "Config Property", description: "A configuration property"\n    }\n    getOptionValues { config ->\n        def options = []\n        options.add([name:"Foo Value",value:"foo"])\n        options.add([name:"Bar Value",value:"bar"])\n        options.add([name:"Baz Value",value:"baz"])\n\n        return options\n    }\n}\n')])])]),t("h2",{attrs:{id:"script-plugin-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-plugin-type","aria-hidden":"true"}},[e._v("#")]),e._v(" Script Plugin Type")]),e._v(" "),t("p",[e._v("Options will be picked up from the script between the markers "),t("code",[e._v("==START_OPTIONS==")]),e._v(" and "),t("code",[e._v("==END_OPTIONS==")]),e._v(".\nEcho your options in the format of "),t("code",[e._v("value:label")]),e._v(".\nThe label will be the appear in the dropdown list, and the associated value will be used as the value passed\nto the option.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('#!/usr/bin/env bash\n\necho "==START_OPTIONS=="\necho "opt1:First Option"\necho "opt2:Second Option"\necho "==END_OPTIONS=="\n\n')])])])])},[],!1,null,null,null);n.default=o.exports}}]);