(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{192:function(e,o,t){"use strict";t.r(o);var n=t(0),a=Object(n.a)({},function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"access-control-policy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#access-control-policy","aria-hidden":"true"}},[e._v("#")]),e._v(" Access Control Policy")]),e._v(" "),t("p",[e._v("Based on the "),t("router-link",{attrs:{to:"/administration/security/authentication.html"}},[e._v("Authentication")]),e._v(' mechanism,\nthe Container provides Rundeck\nwith a list of "group" or "role" names\nthat the user belongs to.\nRundeck uses this list to determine what access rights the user has.\n(For more about the role list,\nrefer to '),t("router-link",{attrs:{to:"/administration/security/authentication.html#container-authentication-and-authorization]."}},[e._v("Authenticating Users - Container authentication and authorization")])],1),e._v(" "),t("p",[e._v("A Rundeck "),t("em",[e._v("access control policy")]),e._v(" grants users\nand user groups certain\nprivileges to perform actions against rundeck resources\nlike projects, jobs, nodes, commands and API.\nEvery action requested by a user is evaluated by the\nRundeck authorization system and logged for\nreporting and auditing purposes.")]),e._v(" "),t("p",[e._v("Since Rundeck respects the policy definition, you can define role-based\nauthorization to restrict users to only a subset of actions. This\nenables a self-service type interface, where some users have\naccess to a limited set of executable actions.")]),e._v(" "),t("p",[e._v("Two dimensions of information dictate authorization inside Rundeck:")]),e._v(" "),t("ul",[t("li",[t("em",[e._v("group")]),e._v(" memberships assigned to a "),t("em",[e._v("user")]),e._v(" login.")]),e._v(" "),t("li",[e._v("access control policy that grants access to one or more "),t("em",[e._v("policy\naction")]),e._v("s to a "),t("em",[e._v("group")]),e._v(" or "),t("em",[e._v("user")]),e._v(".")])]),e._v(" "),t("p",[e._v("The remainder of this section will describe how to use the access\ncontrol policy.")]),e._v(" "),t("h2",{attrs:{id:"access-control-policy-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#access-control-policy-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Access control policy")]),e._v(" "),t("p",[e._v("Access to running or modifying Jobs is managed in an access control\npolicy defined using the aclpolicy YAML document.\nThis file contains a number of policy elements that describe what user\ngroup is allowed to perform which actions.")]),e._v(" "),t("p",[e._v("Please read over this document for information on how to define it, and how to\ngrant access for certain actions to certain resources:")]),e._v(" "),t("ul",[t("li",[t("router-link",{attrs:{to:"/manpages/man5/aclpolicy-v10.html"}},[e._v("aclpolicy")])],1)]),e._v(" "),t("p",[e._v('Policies can be organized into more than one file to help organize\naccess by group or pattern of use. The normal Rundeck install will\nhave generated a policy for the "admin" group. Not all users will need\nto be given "admin" access level to control and modify all Jobs. More\ntypically, a group of users will be given access to just a subset of\nJobs.')]),e._v(" "),t("h3",{attrs:{id:"policy-file-locations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#policy-file-locations","aria-hidden":"true"}},[e._v("#")]),e._v(" Policy File Locations")]),e._v(" "),t("p",[e._v("Rundeck loads ACL Policy definitions from these locations:")]),e._v(" "),t("ul",[t("li",[e._v("All "),t("code",[e._v("*.aclpolicy")]),e._v(" files found in the rundeck "),t("code",[e._v("etc")]),e._v(" dir, which is either "),t("code",[e._v("/etc/rundeck")]),e._v(" (rpm and debian install defaults),\nor "),t("code",[e._v("$RDECK_BASE/etc")]),e._v(" (launcher/war configuration).")]),e._v(" "),t("li",[e._v("System level policies created via the "),t("router-link",{attrs:{to:"/api/rundeck-api.html#acls"}},[e._v("System ACLs API")])],1),e._v(" "),t("li",[e._v("Project level policies created via the [Project ACLs API](/api/rundeck-api.md#project-acls], limited only to project context policies for a specific project.")])]),e._v(" "),t("h3",{attrs:{id:"lifecycle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lifecycle","aria-hidden":"true"}},[e._v("#")]),e._v(" Lifecycle")]),e._v(" "),t("p",[e._v("The Rundeck server does not need to be restarted for changes to aclpolicy files to take effect.")]),e._v(" "),t("p",[e._v("The files are loaded at startup and are cached.\nWhen an authorization request occurs, the policies may be reloaded if the file was modified.\nA file's contents are cached for at least 60 seconds before checking if they need to be reloaded.\nAlso, the etc directory is only re-scanned for new/removed files after a 60 second delay.")]),e._v(" "),t("p",[e._v('If an authorization request occurs in the context of a specific Project\n(e.g. "does a user have Run access for a specific Job in this project?")\nthen the Project-level policies created via the API area also used to evaluate the authorization request.')]),e._v(" "),t("p",[e._v("Otherwise, only the policies on the filesystem, and uploaded to the System ACLs API are evaluated for the request.")]),e._v(" "),t("h3",{attrs:{id:"rd-acl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rd-acl","aria-hidden":"true"}},[e._v("#")]),e._v(" rd-acl")]),e._v(" "),t("p",[e._v("Added in Rundeck 2.5, the "),t("router-link",{attrs:{to:"/manpages/man1/rd-acl.html"}},[e._v("rd-acl")]),e._v(" tool\ncan help to create, test, and validate your policy files.")],1),e._v(" "),t("h3",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[e._v("#")]),e._v(" Example")]),e._v(" "),t("p",[e._v("File listing: admin.aclpolicy example")]),e._v(" "),t("div",{staticClass:"language-{.yaml .numberLines} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("description: Admin project level access control. Applies to resources within a specific project.\ncontext:\n  project: '.*' # all projects\nfor:\n  resource:\n    - equals:\n        kind: job\n      allow: [create] # allow create jobs\n    - equals:\n        kind: node\n      allow: [read,create,update,refresh] # allow refresh node sources\n    - equals:\n        kind: event\n      allow: [read,create] # allow read/create events\n  adhoc:\n    - allow: [read,run,runAs,kill,killAs] # allow running/killing adhoc jobs\n  job:\n    - allow: [create,read,update,delete,run,runAs,kill,killAs] # allow create/read/write/delete/run/kill of all jobs\n  node:\n    - allow: [read,run] # allow read/run for nodes\nby:\n  group: admin\n\n---\n\ndescription: Admin Application level access control, applies to creating/deleting projects, admin of user profiles, viewing projects and reading system information.\ncontext:\n  application: 'rundeck'\nfor:\n  resource:\n    - equals:\n        kind: project\n      allow: [create] # allow create of projects\n    - equals:\n        kind: system\n      allow: [read,enable_executions,disable_executions,admin] # allow read of system info, enable/disable all executions\n    - equals:\n        kind: system_acl\n      allow: [read,create,update,delete,admin] # allow modifying system ACL files\n    - equals:\n        kind: user\n      allow: [admin] # allow modify user profiles\n  project:\n    - match:\n        name: '.*'\n      allow: [read,import,export,configure,delete,promote,admin] # allow full access of all projects or use 'admin'\n  project_acl:\n    - match:\n        name: '.*'\n      allow: [read,create,update,delete,admin] # allow modifying project-specific ACL files\n  storage:\n    - allow: [read,create,update,delete] # allow access for /ssh-key/* storage content\n\nby:\n  group: admin\n")])])]),t("p",[e._v('The example policy document above demonstrates the access granted to\nthe users in group "admin".')]),e._v(" "),t("p",[e._v("Both "),t("code",[e._v("username")]),e._v(" and "),t("code",[e._v("group")]),e._v(" can use regular expressions to match multiple users or groups.")]),e._v(" "),t("p",[e._v('Two separate policies define two levels of access control. The first is the "project"\ncontext, which allows access to actions on resources within a specific project.\nThe second is the "application" level context, which allows access to things\nlike creating projects, access to projects, managing users, and access to system\ninformation.')]),e._v(" "),t("h2",{attrs:{id:"specific-resources-and-resource-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#specific-resources-and-resource-types","aria-hidden":"true"}},[e._v("#")]),e._v(" Specific Resources and Resource Types")]),e._v(" "),t("p",[e._v("As described in the "),t("router-link",{attrs:{to:"/manpages/man5/aclpolicy-v10.html"}},[e._v("ACL Policy)")]),e._v(' definition, access\nis granted or denied to specific "resources". Resources can take two forms:')],1),e._v(" "),t("ul",[t("li",[e._v("A specific resource, with a type and properties")]),e._v(" "),t("li",[e._v('Resource types, which applies to all resources of a specific type or "kind"')])]),e._v(" "),t("p",[e._v('For example, you might want to restrict access to a job or jobs within a certain\ngroup. This corresponds to specific "job" resources with a "group" property\nmatching a certain pattern.')]),e._v(" "),t("p",[e._v("You might also want to restrict who can create "),t("em",[e._v("new")]),e._v(' jobs. Since a new job does\nnot exist yet, you cannot create a rule for this action to apply to an existing\njob. Which means this corresponds to a generic resource with a "kind" called "job".')]),e._v(" "),t("h2",{attrs:{id:"api-token-authorization-roles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-token-authorization-roles","aria-hidden":"true"}},[e._v("#")]),e._v(" API Token Authorization Roles")]),e._v(" "),t("p",[e._v("In Rundeck 2.8.x and later, Authentication Tokens are given a set of "),t("em",[e._v("Authorization Roles")]),e._v(" at generation time,\nso the access levels for the Token depend on how it was generated.")]),e._v(" "),t("p",[e._v("See: [API Token](/api/rundeck-api.md#token-authentication] usage instructions.")]),e._v(" "),t("p",[e._v("See below: "),t("a",{attrs:{href:"#api-token-authorization"}},[e._v("API Token Authorization")]),e._v(".")]),e._v(" "),t("p",[e._v("("),t("strong",[e._v("Note:")]),e._v(" In Rundeck 2.7.x and earlier, clients of the "),t("router-link",{attrs:{to:"/api/rundeck-api.html"}},[e._v("Web API")]),e._v(" may use the [Token Authentication](/api/rundeck-api.md#token-authentication] method. These clients are\nplaced in the special authorization group called "),t("code",[e._v("api_token_group")]),e._v(".)")],1),e._v(" "),t("h2",{attrs:{id:"rundeck-resource-authorizations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rundeck-resource-authorizations","aria-hidden":"true"}},[e._v("#")]),e._v(" Rundeck resource authorizations")]),e._v(" "),t("p",[e._v("Rundeck declares a number of actions that can be referenced inside the access control policy document.")]),e._v(" "),t("p",[e._v("The actions and resources are divided into project scope and application scope:")]),e._v(" "),t("h3",{attrs:{id:"application-scope-resources-and-actions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#application-scope-resources-and-actions","aria-hidden":"true"}},[e._v("#")]),e._v(" Application Scope Resources and Actions")]),e._v(" "),t("p",[e._v("You define application scope rules in the aclpolicy, by declaring this context:")]),e._v(" "),t("pre",[t("code",[e._v("context:\n  application: 'rundeck'\n")])]),e._v(" "),t("p",[e._v("These are the Application scope actions that can be allowed or denied via the\naclpolicy:")]),e._v(" "),t("ul",[t("li",[e._v("Creating Projects ("),t("code",[e._v("create")]),e._v(" action on a resource type with kind 'project')")]),e._v(" "),t("li",[e._v("Reading system information ("),t("code",[e._v("read")]),e._v(" action on a resource type with kind 'system')")]),e._v(" "),t("li",[e._v("Managing System level ACL Policies (actions on a resource type with kind 'system_acl')\n"),t("ul",[t("li",[e._v("Reading "),t("code",[e._v("read")])]),e._v(" "),t("li",[e._v("Creating "),t("code",[e._v("create")])]),e._v(" "),t("li",[e._v("Updating "),t("code",[e._v("update")])]),e._v(" "),t("li",[e._v("Deleting "),t("code",[e._v("delete")])]),e._v(" "),t("li",[e._v("Full access "),t("code",[e._v("admin")])])])]),e._v(" "),t("li",[e._v("Disabling executions ("),t("code",[e._v("disable_executions")]),e._v(" action on a resource type with kind 'system')")]),e._v(" "),t("li",[e._v("Managing executions\n"),t("ul",[t("li",[e._v("Enabling executions ("),t("code",[e._v("enable_executions")]),e._v(" action on a resource type with kind 'system')")]),e._v(" "),t("li",[e._v("Disabling executions ("),t("code",[e._v("disable_executions")]),e._v(" action on a resource type with kind 'system')")]),e._v(" "),t("li",[e._v("Full control ("),t("code",[e._v("admin")]),e._v(" action on a resource type with kind 'system')")])])]),e._v(" "),t("li",[e._v("Administering user profiles ("),t("code",[e._v("admin")]),e._v(" action on a resource type of kind 'user')")]),e._v(" "),t("li",[e._v("Accessing SSH Keys ("),t("code",[e._v("create")]),e._v(","),t("code",[e._v("update")]),e._v(","),t("code",[e._v("read")]),e._v(", or "),t("code",[e._v("delete")]),e._v(" action on a specific path within the storage 'storage' type)")]),e._v(" "),t("li",[e._v("Actions on specific projects by name (actions on a "),t("code",[e._v("project")]),e._v(" type)\n"),t("ul",[t("li",[e._v("Reading "),t("code",[e._v("read")])]),e._v(" "),t("li",[e._v("Deleting "),t("code",[e._v("delete")])]),e._v(" "),t("li",[e._v("Configuring "),t("code",[e._v("configure")])]),e._v(" "),t("li",[e._v("Importing archives "),t("code",[e._v("import")])]),e._v(" "),t("li",[e._v("Exporting archives "),t("code",[e._v("export")])]),e._v(" "),t("li",[e._v("Deleting executions "),t("code",[e._v("delete_execution")])]),e._v(" "),t("li",[e._v("Export project to another Rundeck instance "),t("code",[e._v("promote")])]),e._v(" "),t("li",[e._v("Full access "),t("code",[e._v("admin")])])])]),e._v(" "),t("li",[e._v("Managing Project level ACL Policies on specific projects by name (actions on a "),t("code",[e._v("project_acl")]),e._v(" type)\n"),t("ul",[t("li",[e._v("Reading "),t("code",[e._v("read")])]),e._v(" "),t("li",[e._v("Creating "),t("code",[e._v("create")])]),e._v(" "),t("li",[e._v("Updating "),t("code",[e._v("update")])]),e._v(" "),t("li",[e._v("Deleting "),t("code",[e._v("delete")])]),e._v(" "),t("li",[e._v("Full access "),t("code",[e._v("admin")])])])]),e._v(" "),t("li",[e._v("Generating API Tokens (actions on a resource type of kind "),t("code",[e._v("apitoken")]),e._v(")\n"),t("ul",[t("li",[e._v("Creating User tokens "),t("code",[e._v("generate_user_token")])]),e._v(" "),t("li",[e._v("Creating Service tokens "),t("code",[e._v("generate_service_token")])]),e._v(" "),t("li",[e._v("Full access "),t("code",[e._v("admin")])])])]),e._v(" "),t("li",[e._v("Create Service Tokens with specified Roles (actions on a "),t("code",[e._v("apitoken")]),e._v(" type)\n"),t("ul",[t("li",[e._v("Creating Service tokens "),t("code",[e._v("create")])])])]),e._v(" "),t("li",[e._v("Managing plugins (actions on resource with kind 'plugin')\n"),t("ul",[t("li",[e._v("Listing installed and available plugins "),t("code",[e._v("read")])]),e._v(" "),t("li",[e._v("Installing plugins "),t("code",[e._v("install")])]),e._v(" "),t("li",[e._v("Uninstalling plugins "),t("code",[e._v("uninstall")])]),e._v(" "),t("li",[e._v("Full access "),t("code",[e._v("admin")])])])])]),e._v(" "),t("p",[e._v("The following table summarizes the generic and specific resources and the\nactions you can restrict in the application scope:")]),e._v(" "),t("p",[e._v("Type Resource Kind Properties Actions Description")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("code",[e._v("resource")]),e._v(" "),t("code",[e._v("project")]),e._v(" none "),t("code",[e._v("create")]),e._v(' Create a new project\n" '),t("code",[e._v("system")]),e._v(" none "),t("code",[e._v("read")]),e._v(' Read system information\n" " none '),t("code",[e._v("enable_executions")]),e._v(' Enable executions\n" " none '),t("code",[e._v("disable_executions")]),e._v(' Disable executions\n" " none '),t("code",[e._v("admin")]),e._v(' Enable or disable executions\n" '),t("code",[e._v("system_acl")]),e._v(" none "),t("code",[e._v("read")]),e._v(' Read system ACL policy files\n" " none '),t("code",[e._v("create")]),e._v(' Create system ACL policy files\n" " none '),t("code",[e._v("update")]),e._v(' Update system ACL policy files\n" " none '),t("code",[e._v("delete")]),e._v(' Delete system ACL policy files\n" " none '),t("code",[e._v("admin")]),e._v(' All access to system ACL policy files\n" '),t("code",[e._v("user")]),e._v(" none "),t("code",[e._v("admin")]),e._v(' Modify user profiles\n" '),t("code",[e._v("job")]),e._v(" none "),t("code",[e._v("admin")]),e._v(' Manage job schedules\n" '),t("code",[e._v("apitoken")]),e._v(" none "),t("code",[e._v("generate_user_token")]),e._v(' Create a "user" token\n" " none '),t("code",[e._v("generate_service_token")]),e._v(' Create a "service" token\n" " none '),t("code",[e._v("admin")]),e._v(' Full access\n" '),t("code",[e._v("plugin")]),e._v(" none "),t("code",[e._v("read")]),e._v(' List installed and available plugins\n" " none '),t("code",[e._v("install")]),e._v(' Install plugins\n" " none '),t("code",[e._v("uninstall")]),e._v(' Uninstall plugins\n" " none '),t("code",[e._v("admin")]),e._v(" Full access")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("Table: Application scope generic type actions")]),e._v(" "),t("p",[e._v("Type Properties Actions Description")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("code",[e._v("project")]),e._v(' "name" '),t("code",[e._v("read")]),e._v(' View a project in the project list\n" " '),t("code",[e._v("configure")]),e._v(' View and modify project configuration\n" " '),t("code",[e._v("delete")]),e._v(' Delete project\n" " '),t("code",[e._v("import")]),e._v(' Import archive contents to the project\n" " '),t("code",[e._v("export")]),e._v(' Export the project as an archive\n" " '),t("code",[e._v("delete_execution")]),e._v(' Delete executions\n" " '),t("code",[e._v("admin")]),e._v(" Full access to project\n"),t("code",[e._v("project_acl")]),e._v(' "name" '),t("code",[e._v("read")]),e._v(' Read project ACL Policy files\n" " '),t("code",[e._v("create")]),e._v(' Create project ACL Policy files\n" " '),t("code",[e._v("update")]),e._v(' Update project ACL Policy files\n" " '),t("code",[e._v("delete")]),e._v(' Delete project ACL Policy files\n" " '),t("code",[e._v("admin")]),e._v(" All access to project ACL Policy files\n"),t("code",[e._v("storage")]),e._v(' "path","name" '),t("code",[e._v("create")]),e._v(' Create files in the storage facility\n" " '),t("code",[e._v("update")]),e._v(' Modify files in the storage facility\n" " '),t("code",[e._v("read")]),e._v(' Read files and list directories in the storage facility\n" " '),t("code",[e._v("delete")]),e._v(" Delete files in the storage facility\n"),t("code",[e._v("apitoken")]),e._v(' "username","roles" '),t("code",[e._v("create")]),e._v(" Create an API Token with specified roles or username")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("Table: Application scope specific resource actions")]),e._v(" "),t("h4",{attrs:{id:"api-token-authorization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-token-authorization","aria-hidden":"true"}},[e._v("#")]),e._v(" API Token Authorization")]),e._v(" "),t("p",[e._v("API Tokens can be generated if the user has the appropriate authorization on the "),t("code",[e._v("apitoken")]),e._v(" generic resource type.")]),e._v(" "),t("p",[e._v("\"User Token\"\n: An API Token with the owner's username, and a subset of the owner's authorization roles.")]),e._v(" "),t("p",[e._v('"Service Token"\n: An API Token which may have a different username than the owner, and may have a different set of authorization roles.')]),e._v(" "),t("p",[e._v("This distinction allows administrators to let some users generate API Tokens which cannot increase their access levels (User Tokens), and other users to generate API Tokens with different access levels in a controlled way.")]),e._v(" "),t("p",[e._v("The authorizations levels are:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("generate_user_token")]),e._v(": allows the user to generate a User Token.")]),e._v(" "),t("li",[t("code",[e._v("generate_service_token")]),e._v(": allows a user to generate a Service Token (see below).")]),e._v(" "),t("li",[t("code",[e._v("admin")]),e._v(": allows the user to generate a Token with any username and roles.")])]),e._v(" "),t("p",[e._v("Example to generate a User Token:")]),e._v(" "),t("div",{staticClass:"language-{.yaml} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('description: Allow "ops_team" members to generate User Tokens\nfor:\n  resource:\n  - equals:\n      kind: apitoken\n    allow: generate_user_token\ncontext:\n  application: rundeck\nby:\n  group: ops_team\n')])])]),t("p",[e._v("To specify what roles and usernames are allowed for a Service Token,\nthe user must "),t("em",[e._v("also")]),e._v(" be authorized to "),t("code",[e._v("create")]),e._v(" an "),t("code",[e._v("apitoken")]),e._v(" resource type for a declared set of usernames and roles.")]),e._v(" "),t("p",[e._v("Example to generate a Service Token:")]),e._v(" "),t("div",{staticClass:"language-{.yaml} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("description: Allow \"sec_ops\" members to generate Service Tokens, for specific usernames and additional roles\nfor:\n\n  resource:\n  - equals:\n      kind: apitoken\n    allow: generate_service_token\n\n  apitoken:\n  - allow: create\n    match:\n      username: '(mysql|myservice)'\n    subset:\n      roles:\n      - mysql_api_access\n      - myservice_api_access\ncontext:\n  application: rundeck\nby:\n  group: sec_ops\n")])])]),t("p",[e._v("Service Tokens implicitly allow a subset of the user's own authorization roles and username\n("),t("code",[e._v("generate_service_token")]),e._v(" implies "),t("code",[e._v("generate_user_token")]),e._v("), so the usernames and roles authorized in the\nACL Policy must specify any "),t("em",[e._v("extra")]),e._v(" roles. When a Service Token is generated, any requested roles not\nalready allowed by "),t("code",[e._v("generate_user_token")]),e._v(" will be checked against the ACL Policy. However,\nit is best to be explicit in the list of roles you want to allow.")]),e._v(" "),t("p",[t("strong",[e._v("Important:")])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("subset:")]),e._v(" match for "),t("code",[e._v("roles:")]),e._v(" declares that "),t("em",[e._v("extra")]),e._v(" roles for the Service Token may only\ncome from this list, but doesn't require the token to have all of the roles.\n(If you used "),t("code",[e._v("contains:")]),e._v(" it would be the inverse, and grant access only if\nthe extra Service Token roles contained all of those in the "),t("code",[e._v("roles:")]),e._v(" list, i.e. a superset vs. a subset.)")]),e._v(" "),t("h3",{attrs:{id:"project-scope-resources-and-actions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#project-scope-resources-and-actions","aria-hidden":"true"}},[e._v("#")]),e._v(" Project Scope Resources and Actions")]),e._v(" "),t("p",[e._v("You define project scope rules in the aclpolicy by declaring this context:")]),e._v(" "),t("pre",[t("code",[e._v('context:\n  project: "(regex)"\n')])]),e._v(" "),t("p",[e._v('The regex can match all projects using ".*", or you can simply put the project\nname.')]),e._v(" "),t("p",[e._v("Note that for projects not matched by an aclpolicy, "),t("em",[e._v("no")]),e._v(" actions will be granted\nto users.")]),e._v(" "),t("p",[e._v('Also note that to hide projects completely from users, you would need to grant\nor deny the "read" access to the project in the '),t("a",{attrs:{href:"#application-scope-resources-and-actions"}},[e._v("Application Scope")]),e._v(".")]),e._v(" "),t("p",[e._v("These are the Project scope actions that can be allowed or denied via the\naclpolicy:")]),e._v(" "),t("ul",[t("li",[e._v("Create Jobs ('create' action on a resource type with kind 'job')")]),e._v(" "),t("li",[e._v("Delete Jobs ('delete' action on a resource type with kind 'job')")]),e._v(" "),t("li",[e._v("Create or delete jobs using the SCM plugin only ('scm_create' and 'scm_delete' on a resource type with kind 'job')")]),e._v(" "),t("li",[e._v("Read Node data ('read' action on a resource type with kind 'node')")]),e._v(" "),t("li",[e._v("Update/Refresh node data ('create','update','refresh' action on a resource type with kind 'node')")]),e._v(" "),t("li",[e._v("Read history events ('read' action on a resource type with kind 'event')")]),e._v(" "),t("li",[e._v("Create history events ('create' action on a resource type with kind 'event')")]),e._v(" "),t("li",[e._v("Run adhoc jobs ('run' action on 'adhoc' resources)")]),e._v(" "),t("li",[e._v("Kill adhoc jobs ('kill' action on 'adhoc' resources)")]),e._v(" "),t("li",[e._v("Any Action on Jobs (actions on 'job' resources, see below)")])]),e._v(" "),t("p",[e._v("The following table summarizes the generic and specific resources and the\nactions you can restrict in the project scope:")]),e._v(" "),t("p",[e._v("Type Resource Kind Actions Description")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("code",[e._v("resource")]),e._v(" "),t("code",[e._v("job")]),e._v(" "),t("code",[e._v("create")]),e._v(' Create a new Job\n" " '),t("code",[e._v("delete")]),e._v(' Delete jobs\n" " '),t("code",[e._v("scm_create")]),e._v(' Create a new job only using SCM import plugin\n" " '),t("code",[e._v("scm_delete")]),e._v(' Delete jobs only using SCM import plugin\n" '),t("code",[e._v("node")]),e._v(" "),t("code",[e._v("read")]),e._v(' Read node information\n" " '),t("code",[e._v("create")]),e._v(' Create new node entries\n" " '),t("code",[e._v("update")]),e._v(' Modify node entries\n" " '),t("code",[e._v("refresh")]),e._v(' Refresh node entry from a URL\n" '),t("code",[e._v("event")]),e._v(" "),t("code",[e._v("read")]),e._v(' Read history event information\n" " '),t("code",[e._v("create")]),e._v(" Create arbitrary history event entries")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("Table: Project scope generic type actions")]),e._v(" "),t("p",[e._v("Type Properties Actions Description")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("code",[e._v("adhoc")]),e._v(" "),t("code",[e._v("read")]),e._v(' Read adhoc execution output\n" '),t("code",[e._v("run")]),e._v(' Run an adhoc execution\n" '),t("code",[e._v("runAs")]),e._v(' Run an adhoc execution as another user\n" '),t("code",[e._v("kill")]),e._v(' Kill an adhoc execution\n" '),t("code",[e._v("killAs")]),e._v(" Kill an adhoc execution as another user\n"),t("code",[e._v("job")]),e._v(' "name","group","uuid" '),t("code",[e._v("read")]),e._v(' View a Job, its executions, and read its definition\n" '),t("code",[e._v("view")]),e._v(' View a Job and its executions\n" '),t("code",[e._v("update")]),e._v(' Modify a job\n" '),t("code",[e._v("delete")]),e._v(' Delete a job\n" '),t("code",[e._v("run")]),e._v(' Run a job\n" '),t("code",[e._v("runAs")]),e._v(' Run a job as another user\n" '),t("code",[e._v("kill")]),e._v(' Kill a running job\n" '),t("code",[e._v("killAs")]),e._v(' Kill a running job as another user\n" '),t("code",[e._v("create")]),e._v(' Create the matching job\n" '),t("code",[e._v("toggle_schedule")]),e._v(" Enable/disable the job's schedule\n\" "),t("code",[e._v("toggle_execution")]),e._v(' Enable/disable the job for execution\n" '),t("code",[e._v("scm_create")]),e._v(' Create a Job only using SCM import plugin\n" '),t("code",[e._v("scm_update")]),e._v(' Import changes to a job using SCM import plugin\n" '),t("code",[e._v("scm_delete")]),e._v(" Delete a job only using SCM import plugin\n"),t("code",[e._v("node")]),e._v(' "rundeck_server", "nodename", ... '),t("code",[e._v("read")]),e._v(" View the node in the UI (see "),t("a",{attrs:{href:"#node-resource-properties"}},[e._v("Node resource properties")]),e._v(')\n" '),t("code",[e._v("run")]),e._v(" Run jobs/adhoc on the node")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("Table: Project scope specific resource actions")]),e._v(" "),t("p",[t("em",[e._v("Note")]),e._v(": see "),t("a",{attrs:{href:"#node-resource-properties"}},[e._v("Node resource properties")]),e._v(" for more node resource properties for authorization.")]),e._v(" "),t("p",[t("em",[e._v("Note")]),e._v(': Jobs can be referenced using "name" and "group" or using "uuid".')]),e._v(" "),t("p",[t("em",[e._v("Note")]),e._v(": "),t("code",[e._v("runAs")]),e._v(" and "),t("code",[e._v("killAs")]),e._v(" actions only apply to certain API endpoints, and allow running jobs or adhoc executions or killing executions to be performed with a different username attached as the author of the action. See [Rundeck API - Running a Job](/api/rundeck-api.md#running-a-job].")]),e._v(" "),t("p",[t("em",[e._v("Note")]),e._v(":\nJob deletion requires allowing the 'delete' action\nboth at the generic type\nand specific resource levels.")]),e._v(" "),t("p",[e._v("Recall that defining rules for a generic resource type is done in this way:")]),e._v(" "),t("div",{staticClass:"language-{.yaml} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("for:\n  resource:\n    - equals:\n        kind: 'project'\n      allow: [create]\n")])])]),t("p",[e._v("Whereas defining rules for specific resources of a certain type is done in this\nway:")]),e._v(" "),t("div",{staticClass:"language-{.yaml} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("for:\n  job:\n    - equals:\n        name: bob\n      allow: [run]\n")])])]),t("p",[e._v("Or")]),e._v(" "),t("div",{staticClass:"language-{.yaml} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("for:\n  job:\n    - equals:\n        uuid: baad57ad-1e0b-4452-b1e3-0cbcd10a7bec\n      allow: [run]\n")])])]),t("h3",{attrs:{id:"node-resource-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-resource-properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Node resource properties")]),e._v(" "),t("p",[e._v("The properties available are the attributes that are defined on the node, so you can apply authorizations based on tag, osName, hostname, etc. The special "),t("code",[e._v("rundeck_server")]),e._v(' property will be set to "true" for the Rundeck server node only, and "false" for all other nodes.')]),e._v(" "),t("p",[e._v("Any custom attributes can be used as well.")]),e._v(" "),t("p",[e._v("Name Description")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("code",[e._v("nodename")]),e._v(" Name of the node\n"),t("code",[e._v("username")]),e._v(" Authentication username\n"),t("code",[e._v("hostname")]),e._v(" Hostname of the node\n"),t("code",[e._v("description")]),e._v(" Description of the node\n"),t("code",[e._v("tags")]),e._v(" Set of tags. Can use with the "),t("code",[e._v("contains:")]),e._v(" filter.\n"),t("code",[e._v("osName")]),e._v(" Operating System name\n"),t("code",[e._v("osFamily")]),e._v(' Operating System family, e.g. "unix" or "windows"\n'),t("code",[e._v("osVersion")]),e._v(" Operating System version\n"),t("code",[e._v("osArch")]),e._v(" Operating System architecture\n"),t("code",[e._v("rundeck_server")]),e._v(' A value set to "true" if the node is the Rundeck server node')]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("Table: Pre-defined Node resource properties for authorization filters")]),e._v(" "),t("h3",{attrs:{id:"access-control-policy-actions-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#access-control-policy-actions-example","aria-hidden":"true"}},[e._v("#")]),e._v(" Access control policy actions example")]),e._v(" "),t("p",[e._v('Below is an example policy document demonstrating policy actions\nto create limited access for a group of users.\nUsers in the group "restart_user", are allowed to run three jobs in the "adm"\ngroup, Restart, stop and start. By allowing '),t("code",[e._v("run")]),e._v(" but not "),t("code",[e._v("read")]),e._v(',\nthe "stop" and "start" jobs will not be visible.\nAllowing '),t("code",[e._v("view")]),e._v(" for the 'Restart' job, but not "),t("code",[e._v("read")]),e._v(",\nmeans that the users can view the job,\nbut not its workflow definition,\nnor can they download the Job definition file.")]),e._v(" "),t("p",[e._v("File listing: restart_user.aclpolicy example")]),e._v(" "),t("div",{staticClass:"language-{.yaml .numberLines} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("description: Limited user access for adm restart action\ncontext:\n  project: '.*'\nfor:\n  job:\n    - equals:\n        group: 'adm'\n        name: 'Restart'\n      allow: [run,view]\n    - equals:\n        group: 'adm'\n        name: 'stop'\n      allow: [run]\n    - equals:\n        group: 'adm'\n        name: 'start'\n      allow: [run]\nby:\n  group: [restart_user]\n\n---\n\ndescription: Limited user access for adm restart action.\ncontext:\n  application: 'rundeck'\nfor:\n  resource:\n    - equals:\n        kind: system\n      allow: [read] # allow read of system info\n  project:\n    - match:\n        name: '.*'\n      allow: [read] # allow view of all projects\nby:\n  group: [restart_user]\n")])])]),t("h2",{attrs:{id:"prevent-local-execution-on-the-rundeck-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prevent-local-execution-on-the-rundeck-server","aria-hidden":"true"}},[e._v("#")]),e._v(" Prevent Local Execution on the Rundeck Server")]),e._v(" "),t("p",[e._v('Below is an example policy to prevent any user on the "remote" group to\nexecute any command or job on the local rundeck server.')]),e._v(" "),t("p",[e._v("If a job is tried to be executed locally, it will fail. Also, the local\nrundeck server will not appear on the node filter list.")]),e._v(" "),t("p",[e._v("File listing: remote.aclpolicy")]),e._v(" "),t("div",{staticClass:"language-{.yaml .numberLines} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("description: Acess for users on remote group\ncontext:\n  project: '.*'\nfor:\n  resource:\n    - allow: '*'\n  job:\n    - allow: '*'\n  adhoc:\n    - allow: '*'\n  node:\n    - equals:\n        rundeck_server: 'false'\n      allow: [read, run]\nby:\n  group: remote\n")])])]),t("h2",{attrs:{id:"troubleshooting-access-control-policy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting-access-control-policy","aria-hidden":"true"}},[e._v("#")]),e._v(" Troubleshooting access control policy")]),e._v(" "),t("p",[e._v('After defining an aclpolicy file to grant access to a particular group\nof users, you may find them getting "unauthorized" messages or\ncomplaints that certain actions are not possible.')]),e._v(" "),t("p",[e._v("To diagnose this, begin by checking two bits:")]),e._v(" "),t("ol",[t("li",[e._v("The user's group membership. This can be done by going to the\nuser's profile page in Rundeck. That page will list the groups the\nuser is a member.")]),e._v(" "),t("li",[e._v("Read the messages inside the "),t("code",[e._v("rundeck.audit.log")]),e._v(" log file. The\nauthorization facility generates fairly low level messages describing\nhow the policy is matched to the user context.")]),e._v(" "),t("li",[e._v("Use the "),t("router-link",{attrs:{to:"/manpages/man1/rd-acl.html"}},[e._v("rd-acl")]),e._v(" tool to test and validate your policy files")],1)]),e._v(" "),t("p",[e._v("For each entry in the audit log, you'll see all decisions leading up to either a\nAUTHORIZED or a REJECTED message. It's not uncommon to see REJECTED\nmessages followed by AUTHORIZED. The important thing is to look at\nthe last decision made.")])])},[],!1,null,null,null);o.default=a.exports}}]);